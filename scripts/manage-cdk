#!/usr/bin/env python3

"""Deploys a CDK cluster."""

import argparse
import importlib
import json
import textwrap
from typing import List

import time

common = importlib.import_module('common', 'common.py')
get_output = common.get_output
require = common.require
run = common.run


def parse_args():
    parser = argparse.ArgumentParser()
    subparser = parser.add_subparsers(dest='command', help='foo')
    subparser.required = True
    create_args = subparser.add_parser('create')
    destroy_args = subparser.add_parser('destroy')
    info_args = subparser.add_parser('info')

    create_args.add_argument('--cloud', default='aws', help='Cloud to deploy onto')
    create_args.add_argument('--region', default='us-east-1', help='Cloud region to deploy onto')
    create_args.add_argument(
        '--controller', default='cdkkf', help='Name to use for created controller'
    )
    create_args.add_argument('--model', default='default', help='Juju model name to spin up CDK in')
    create_args.add_argument('--wait', default='900', help='How long to wait for CDK to boot up')

    destroy_args.add_argument('--controller', default='cdkkf', help='Name of controller to destroy')
    destroy_args.add_argument(
        'args', nargs='*', help='Arguments passed on to `juju destroy-controller`'
    )

    info_args.add_argument('--controller', default='cdkkf', help='Juju controller name')
    info_args.add_argument('--model', default='default', help='Juju model name')

    return parser.parse_args()


def info(controller: str, model: str):
    config = json.loads(
        get_output('juju', 'kubectl', '-m', f'{controller}:{model}', 'config', 'view', '-ojson')
    )

    dashboard = config['clusters'][0]['cluster']['server']
    username = config['users'][0]['user']['username']
    password = config['users'][0]['user']['password']

    print(
        textwrap.dedent(
            f"""

        The Kubernetes dashboard is available at:

            {dashboard}/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/overview

        The username and password are:

            {username}
            {password}

        To deploy Kubeflow on top of CDK, run `./scripts/deploy-cdk create`.

        To tear down CDK and associated infrastructure, run this command:

            ./scripts/manage-cdk destroy --controller {controller} --model {model}

        For more information, see documentation at:

        https://github.com/juju-solutions/bundle-kubeflow/blob/master/README.md

        """
        )
    )


def create(cloud: str, region: str, controller: str, model: str, wait: str):
    """Create CDK on given cloud."""

    require('juju', 'juju-wait')

    start = time.time()

    # Spin up CDK
    run('juju', 'bootstrap', f'{cloud}/{region}', controller)
    run('juju', 'deploy', 'cs:bundle/canonical-kubernetes', '--overlay', 'overlays/cdk.yml')
    run('juju', 'deploy', f'cs:~containers/{cloud}-integrator')
    run('juju', 'trust', f'{cloud}-integrator')
    run('juju', 'add-relation', f'{cloud}-integrator', 'kubernetes-master')
    run('juju', 'add-relation', f'{cloud}-integrator', 'kubernetes-worker')

    # Wait for cloud to finish booting up
    run('juju', 'wait', '-e', f'{controller}:{model}', '-vwt', wait)

    run('juju', 'expose', 'kubeapi-load-balancer')

    end = time.time()

    print(f'\nCongratulations, CDK is now available. Took {int(end - start)} seconds.')

    info(controller, model)


def destroy(controller: str, args: List[str]):
    """Destroy given controller."""

    require('juju')

    run('juju', 'destroy-controller', *args, controller)


if __name__ == '__main__':
    parsed = parse_args()

    if parsed.command == 'create':
        create(parsed.cloud, parsed.region, parsed.controller, parsed.model, parsed.wait)
    elif parsed.command == 'destroy':
        destroy(parsed.controller, parsed.args)
    elif parsed.command == 'info':
        info(parsed.controller, parsed.model)
